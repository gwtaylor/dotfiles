#!/bin/bash

#export EDITOR="emacsclient -c -a emacs"
export EDITOR="/Applications/Aquamacs.app/Contents/MacOS/bin/emacsclient -c -a emacs"

#for MacPorts
export PATH=/opt/local/bin:/opt/local/sbin:$PATH
export MANPATH=/opt/local/share/man:$MANPATH

# Setting PATH for Anaconda 1.6.1
CONDA_PATH="/opt/anaconda"
export PATH="${CONDA_PATH}/bin:${PATH}"
# to avoid errors about not finding tcl.init
export TCL_LIBRARY=${CONDA_PATH}/lib/tcl8.5

# In ~/.theanorc we set blas.ldflags to certain MKL libraries
# This lets them be found but doesn't mess with the system defaults (like DYLD_LIBRARY_PATH)
# export DYLD_FALLBACK_LIBRARY_PATH=/Library/Frameworks/EPD64.framework/Versions/Current/lib:${DYLD_FALLBACK_LIBRARY_PATH}
export DYLD_FALLBACK_LIBRARY_PATH=${CONDA_PATH}/lib:${DYLD_FALLBACK_LIBRARY_PATH}

# virtualenv
# source ~/virtualenvs/default_x86_64/bin/activate

# Get number of CPU cores in OSX
# /usr/sbin/system_profiler -detailLevel full SPHardwareDataType | awk '/Total Number Of Cores/ {print $5};'
# Get number of Processors
# /usr/sbin/system_profiler -detailLevel full SPHardwareDataType | awk '/Number Of Processors/ {print $4};'
# On my mac: 1 processor, 2 cores
MKL_NUM_THREADS=2
export MKL_NUM_THREADS

# Android SDK
export PATH=${PATH}:/Developer/android-sdk-macosx/tools/:/Developer/android-sdk-macosx/platform-tools/

#for CUDA
export PATH=/usr/local/cuda/bin:$PATH
export DYLD_LIBRARY_PATH=/usr/local/cuda/lib:$DYLD_LIBRARY_PATH
export LD_LIBRARY_PATH=/usr/local/cuda/lib:$LD_LIBRARY_PATH

#don't want to use tex in macports by default
export PATH=/usr/texbin:${PATH}

# Files common to projects
# export PYTHONPATH=${HOME}/python/common

#project modules
export PYTHONPATH=$HOME/python/SquidBall/tracker:$HOME/python/SquidBall/pantilt:${PYTHONPATH}

#cudamat and gnumpy
export PYTHONPATH=$HOME/python/gnumpy:$HOME/python/cudamat:${PYTHONPATH}

export LIBRARY_PATH=/opt/local/lib:${LIBRARY_PATH}

#import cudamat in python must be able to find .so files
export LD_LIBRARY_PATH=$HOME/python/cudamat:${LD_LIBRARY_PATH}

#explicitly add opencv libraries when they can't be found
OPENCV_LIBRARY_PATH=$HOME/bin/x86_64/OpenCV-2.4.4/lib
export DYLD_FALLBACK_LIBRARY_PATH=$OPENCV_LIBRARY_PATH:${DYLD_FALLBACK_LIBRARY_PATH}

# Amazon AWS stuff
export PATH=/Users/gwtaylor/src/elastic-mapreduce-ruby:${PATH}

# Colorize the Terminal
export CLICOLOR=1;

# Hyperopt
export PATH=$HOME/src/hyperopt/bin:$PATH