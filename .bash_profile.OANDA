# -*- mode: Shell-script; fill-column: 75; comment-column: 50; -*-
DOTFILES_DIR=~/dotfiles
THIS_ARCH=`arch`

# This file is sourced by bash for login shells.  The following line
# runs your .bashrc and is recommended by the bash info pages.
[[ -f ~/.bashrc ]] && . ~/.bashrc

export PATH=$HOME/bin:/usr/local/bin:$PATH

# Platform-specific statements
# This used to conditionally execute .bash_profile.Linux
# Now just issue OANDA-specific cases here

# Fix dircolors
# https://github.com/seebi/dircolors-solarized
eval `dircolors /home/gtaylor/src/dircolors-solarized/dircolors.ansi-dark`

# tries emacsclient in current terminal window; fall back to launching emacs
export EDITOR="emacsclient -t -a emacs"

# start keychain and point it to the private keys that we would like to cache
# do this even on gtaylor-pc (Gnome keyring does not work for remote sessions)
#if [ "x86_64" = "$THIS_ARCH" ]; then
$HOME/bin/keychain ~/.ssh/id_rsa
[[ -f $HOME/.keychain/$HOSTNAME-sh ]] && \
source $HOME/.keychain/$HOSTNAME-sh > /dev/null
#fi

# bidbtest doesn't have terminfo for xterm-mono
THIS_ARCH=`arch`                                                                                                     |
if [ "x86_64" = "$THIS_ARCH" ]; then
   export TERMINFO=$HOME/.terminfo
fi

unset PYTHONPATH  # just in case something weird is here

# Files common to projects
export PYTHONPATH=${HOME}/python/common

# Development scikits-learn
export PYTHONPATH=${HOME}/src/${THIS_ARCH}/scikit-learn:${PYTHONPATH}

# Development joblib
export PYTHONPATH=${HOME}/src/${THIS_ARCH}/joblib:${PYTHONPATH}

# elastic-custer
export PATH=$HOME/src/${THIS_ARCH}/elastic-mapreduce:$PATH
export PATH=$HOME/src/${THIS_ARCH}/s3cmd-1.0.1:$PATH

# ARCH-specific binaries
export PATH=$HOME/bin/${THIS_ARCH}:$PATH

# EPD
if [ "x86_64" = "$THIS_ARCH" ]; then
    export PATH=$HOME/src/${THIS_ARCH}/epd-7.1-2-rh5-x86_64/bin:$PATH
else
    export PATH=$HOME/src/${THIS_ARCH}/epd-7.1-2-rh5-x86/bin:$PATH
fi
# Default python virtual environment
source ~/virtualenvs/default_${THIS_ARCH}/bin/activate
# Fix virtualenv problem with TCL
if [ "x86_64" = "$THIS_ARCH" ]; then
    export TCL_LIBRARY=$HOME/src/${THIS_ARCH}/epd-7.1-2-rh5-x86_64/lib/tcl8.5
else
    export TCL_LIBRARY=$HOME/src/${THIS_ARCH}/epd-7.1-2-rh5-x86/lib/tcl8.5
fi

# Theano configuration (platform-specific)
export THEANORC=${DOTFILES_DIR}/.theanorc.${THIS_ARCH}

# Useful for JPype
if [ "x86_64" = "$THIS_ARCH" ]; then
    export JAVA_HOME=/usr/lib/jvm/java-1.6.0
else
    export JAVA_HOME=/usr/lib/jvm/default-java
fi
